/*! Generated by redux-scfld not for editing */
'use strict';

import { is } from 'immutable';

import app from './app.js';
import defaultState from './../states';

const namespaceReducersMap = {
    app
};

export default function(state = defaultState, action) {
    const { namespace } = action;
    if ( namespace in namespaceReducersMap ) {
        const prevNamespaceState = state.get(namespace);
        const nextNamespaceState = namespaceReducersMap[namespace](prevNamespaceState, action);
        if (typeof nextNamespaceState === 'undefined') {
            throw new Error(`State from reducer '${namespace}' cannot be undefined`);
        }
        if ( !is(prevNamespaceState, nextNamespaceState) ) {
            state.set(namespace, nextNamespaceState);
        }
    }
    return state;
}